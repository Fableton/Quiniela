// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Respository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(QuinielaContext))]
    partial class QuinielaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Auths.Activity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activities", "Security");

                    b.HasData(
                        new
                        {
                            Id = "UpdateQuiniela",
                            Description = "Update Quiniela matches"
                        },
                        new
                        {
                            Id = "Index",
                            Description = "Watch Index"
                        },
                        new
                        {
                            Id = "UpdateMatches",
                            Description = "Update matches"
                        },
                        new
                        {
                            Id = "ViewAdminUsers",
                            Description = "View List of Users"
                        },
                        new
                        {
                            Id = "AddAdminUsers",
                            Description = "Add new players"
                        },
                        new
                        {
                            Id = "GenerateLinkAdminUsers",
                            Description = "Generate acces token to user"
                        },
                        new
                        {
                            Id = "ViewAdminMatch",
                            Description = "View List of Matchs"
                        },
                        new
                        {
                            Id = "UpdateAdminMatchResult",
                            Description = "Update Match Result"
                        });
                });

            modelBuilder.Entity("Entities.Auths.Rol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Rols", "Security");

                    b.HasData(
                        new
                        {
                            Id = "Admin",
                            Description = "Root admin",
                            IsRoot = true
                        },
                        new
                        {
                            Id = "Player",
                            Description = "Single PLayer",
                            IsRoot = false
                        });
                });

            modelBuilder.Entity("Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanDraw")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ended")
                        .HasColumnType("bit");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalGoals")
                        .HasColumnType("int");

                    b.Property<string>("LocalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QuinielaId")
                        .HasColumnType("int");

                    b.Property<int>("VisitorGoals")
                        .HasColumnType("int");

                    b.Property<string>("VisitorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("QuinielaId");

                    b.HasIndex("VisitorId");

                    b.ToTable("Matchs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo A",
                            LocalGoals = 0,
                            LocalId = "QAT",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "ECU"
                        },
                        new
                        {
                            Id = 2,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo A",
                            LocalGoals = 0,
                            LocalId = "SEN",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "NED"
                        },
                        new
                        {
                            Id = 3,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 21, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo B",
                            LocalGoals = 0,
                            LocalId = "ENG",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "IRN"
                        },
                        new
                        {
                            Id = 4,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 21, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo B",
                            LocalGoals = 0,
                            LocalId = "USA",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "WAL"
                        },
                        new
                        {
                            Id = 5,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 22, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo C",
                            LocalGoals = 0,
                            LocalId = "ARG",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "KSA"
                        },
                        new
                        {
                            Id = 6,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 22, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo C",
                            LocalGoals = 0,
                            LocalId = "MEX",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "POL"
                        },
                        new
                        {
                            Id = 7,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 22, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo D",
                            LocalGoals = 0,
                            LocalId = "DEN",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "TUN"
                        },
                        new
                        {
                            Id = 8,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 22, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo D",
                            LocalGoals = 0,
                            LocalId = "FRA",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "AUS"
                        },
                        new
                        {
                            Id = 9,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo E",
                            LocalGoals = 0,
                            LocalId = "ESP",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "CRC"
                        },
                        new
                        {
                            Id = 10,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 23, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo E",
                            LocalGoals = 0,
                            LocalId = "GER",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "JPN"
                        },
                        new
                        {
                            Id = 11,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 23, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo F",
                            LocalGoals = 0,
                            LocalId = "BEL",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "CAN"
                        },
                        new
                        {
                            Id = 12,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 23, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo F",
                            LocalGoals = 0,
                            LocalId = "MAR",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "CRO"
                        },
                        new
                        {
                            Id = 13,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 24, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo G",
                            LocalGoals = 0,
                            LocalId = "SUI",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "CMR"
                        },
                        new
                        {
                            Id = 14,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo G",
                            LocalGoals = 0,
                            LocalId = "BRA",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "SRB"
                        },
                        new
                        {
                            Id = 15,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo H",
                            LocalGoals = 0,
                            LocalId = "POR",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "GHA"
                        },
                        new
                        {
                            Id = 16,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 24, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo H",
                            LocalGoals = 0,
                            LocalId = "URU",
                            QuinielaId = 1,
                            VisitorGoals = 0,
                            VisitorId = "KOR"
                        },
                        new
                        {
                            Id = 17,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 25, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo B",
                            LocalGoals = 0,
                            LocalId = "WAL",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "IRN"
                        },
                        new
                        {
                            Id = 18,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 25, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo A",
                            LocalGoals = 0,
                            LocalId = "QAT",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "SEN"
                        },
                        new
                        {
                            Id = 19,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo A",
                            LocalGoals = 0,
                            LocalId = "NED",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "ECU"
                        },
                        new
                        {
                            Id = 20,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 25, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo B",
                            LocalGoals = 0,
                            LocalId = "ENG",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "USA"
                        },
                        new
                        {
                            Id = 21,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 26, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo D",
                            LocalGoals = 0,
                            LocalId = "TUN",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "AUS"
                        },
                        new
                        {
                            Id = 22,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 26, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo C",
                            LocalGoals = 0,
                            LocalId = "POL",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "KSA"
                        },
                        new
                        {
                            Id = 23,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 26, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo D",
                            LocalGoals = 0,
                            LocalId = "FRA",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "DEN"
                        },
                        new
                        {
                            Id = 24,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 26, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo C",
                            LocalGoals = 0,
                            LocalId = "ARG",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "MEX"
                        },
                        new
                        {
                            Id = 25,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 27, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo E",
                            LocalGoals = 0,
                            LocalId = "JPN",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "CRC"
                        },
                        new
                        {
                            Id = 26,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 27, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo F",
                            LocalGoals = 0,
                            LocalId = "BEL",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "MAR"
                        },
                        new
                        {
                            Id = 27,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo F",
                            LocalGoals = 0,
                            LocalId = "CRO",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "CAN"
                        },
                        new
                        {
                            Id = 28,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo E",
                            LocalGoals = 0,
                            LocalId = "ESP",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "GER"
                        },
                        new
                        {
                            Id = 29,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 28, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo G",
                            LocalGoals = 0,
                            LocalId = "CMR",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "SRB"
                        },
                        new
                        {
                            Id = 30,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 28, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo H",
                            LocalGoals = 0,
                            LocalId = "KOR",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "GHA"
                        },
                        new
                        {
                            Id = 31,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 28, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo G",
                            LocalGoals = 0,
                            LocalId = "BRA",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "SUI"
                        },
                        new
                        {
                            Id = 32,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 28, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo H",
                            LocalGoals = 0,
                            LocalId = "POR",
                            QuinielaId = 2,
                            VisitorGoals = 0,
                            VisitorId = "URU"
                        },
                        new
                        {
                            Id = 33,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 29, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo A",
                            LocalGoals = 0,
                            LocalId = "ECU",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "SEN"
                        },
                        new
                        {
                            Id = 34,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 29, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo A",
                            LocalGoals = 0,
                            LocalId = "NED",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "QAT"
                        },
                        new
                        {
                            Id = 35,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 29, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo B",
                            LocalGoals = 0,
                            LocalId = "IRN",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "USA"
                        },
                        new
                        {
                            Id = 36,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 29, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo B",
                            LocalGoals = 0,
                            LocalId = "WAL",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "ENG"
                        },
                        new
                        {
                            Id = 37,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 30, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo D",
                            LocalGoals = 0,
                            LocalId = "TUN",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "FRA"
                        },
                        new
                        {
                            Id = 38,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 30, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo D",
                            LocalGoals = 0,
                            LocalId = "AUS",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "DEN"
                        },
                        new
                        {
                            Id = 39,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo C",
                            LocalGoals = 0,
                            LocalId = "POL",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "ARG"
                        },
                        new
                        {
                            Id = 40,
                            CanDraw = true,
                            Date = new DateTime(2022, 11, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo C",
                            LocalGoals = 0,
                            LocalId = "KSA",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "MEX"
                        },
                        new
                        {
                            Id = 41,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo F",
                            LocalGoals = 0,
                            LocalId = "CRO",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "BEL"
                        },
                        new
                        {
                            Id = 42,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo F",
                            LocalGoals = 0,
                            LocalId = "CAN",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "MAR"
                        },
                        new
                        {
                            Id = 43,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo E",
                            LocalGoals = 0,
                            LocalId = "JPN",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "ESP"
                        },
                        new
                        {
                            Id = 44,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo E",
                            LocalGoals = 0,
                            LocalId = "CRC",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "GER"
                        },
                        new
                        {
                            Id = 45,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo H",
                            LocalGoals = 0,
                            LocalId = "KOR",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "POR"
                        },
                        new
                        {
                            Id = 46,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo H",
                            LocalGoals = 0,
                            LocalId = "GHA",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "URU"
                        },
                        new
                        {
                            Id = 47,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo G",
                            LocalGoals = 0,
                            LocalId = "SRB",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "SUI"
                        },
                        new
                        {
                            Id = 48,
                            CanDraw = true,
                            Date = new DateTime(2022, 12, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "Grupo G",
                            LocalGoals = 0,
                            LocalId = "CMR",
                            QuinielaId = 3,
                            VisitorGoals = 0,
                            VisitorId = "BRA"
                        },
                        new
                        {
                            Id = 49,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 50,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 3, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 51,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 52,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 4, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 53,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 54,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 5, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 55,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 56,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 6, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 4,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 57,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 9, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 5,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 58,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 9, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 5,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 59,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 5,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 60,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 10, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 5,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 61,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 13, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 6,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 62,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 14, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 6,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 63,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 17, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 7,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        },
                        new
                        {
                            Id = 64,
                            CanDraw = false,
                            Date = new DateTime(2022, 12, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Ended = false,
                            Group = "",
                            LocalGoals = 0,
                            LocalId = "N/A",
                            QuinielaId = 7,
                            VisitorGoals = 0,
                            VisitorId = "N/A"
                        });
                });

            modelBuilder.Entity("Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ftrejo"
                        });
                });

            modelBuilder.Entity("Entities.PlayerGameResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("PlayerMatchResult", (string)null);
                });

            modelBuilder.Entity("Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ended")
                        .HasColumnType("bit");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuinielaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuinielaId");

                    b.ToTable("Questions", (string)null);
                });

            modelBuilder.Entity("Entities.Quiniela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Quinielas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2022, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jornada 1",
                            StartDate = new DateTime(2022, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2022, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jornada 2",
                            StartDate = new DateTime(2022, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2022, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jornada 3",
                            StartDate = new DateTime(2022, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2022, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Octavos de final",
                            StartDate = new DateTime(2022, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2022, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cuartos de final",
                            StartDate = new DateTime(2022, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Semifinal",
                            StartDate = new DateTime(2022, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2022, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Finales",
                            StartDate = new DateTime(2022, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = 1
                        });
                });

            modelBuilder.Entity("Entities.Team", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "KSA",
                            Name = "Arabia Saudita"
                        },
                        new
                        {
                            Id = "ARG",
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = "BRA",
                            Name = "Brasil"
                        },
                        new
                        {
                            Id = "QAT",
                            Name = "Catar"
                        },
                        new
                        {
                            Id = "CRC",
                            Name = "CostaRica"
                        },
                        new
                        {
                            Id = "CAN",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = "CRO",
                            Name = "Croacia"
                        },
                        new
                        {
                            Id = "CMR",
                            Name = "Camerun"
                        },
                        new
                        {
                            Id = "KOR",
                            Name = "Corea del Sur"
                        },
                        new
                        {
                            Id = "SEN",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = "ECU",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = "NED",
                            Name = "Paises Bajos"
                        },
                        new
                        {
                            Id = "ENG",
                            Name = "Inglaterra"
                        },
                        new
                        {
                            Id = "USA",
                            Name = "Estados Unidos"
                        },
                        new
                        {
                            Id = "IRN",
                            Name = "Iran"
                        },
                        new
                        {
                            Id = "WAL",
                            Name = "Gales"
                        },
                        new
                        {
                            Id = "MEX",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = "POL",
                            Name = "Polonia"
                        },
                        new
                        {
                            Id = "DEN",
                            Name = "Dinamarca"
                        },
                        new
                        {
                            Id = "FRA",
                            Name = "Francia"
                        },
                        new
                        {
                            Id = "TUN",
                            Name = "Tunez"
                        },
                        new
                        {
                            Id = "AUS",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = "ESP",
                            Name = "España"
                        },
                        new
                        {
                            Id = "GER",
                            Name = "Alemania"
                        },
                        new
                        {
                            Id = "JPN",
                            Name = "Japon"
                        },
                        new
                        {
                            Id = "BEL",
                            Name = "Belgica"
                        },
                        new
                        {
                            Id = "MAR",
                            Name = "Marruecos"
                        },
                        new
                        {
                            Id = "SUI",
                            Name = "Suiza"
                        },
                        new
                        {
                            Id = "SRB",
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = "POR",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = "URU",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = "GHA",
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = "N/A",
                            Name = "Por definir"
                        });
                });

            modelBuilder.Entity("Entities.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tournaments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Qatar 2022"
                        });
                });

            modelBuilder.Entity("PlayersRols", b =>
                {
                    b.Property<string>("RolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("RolId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayersRols", "Security");

                    b.HasData(
                        new
                        {
                            RolId = "Admin",
                            PlayerId = 1
                        });
                });

            modelBuilder.Entity("RolsActivity", b =>
                {
                    b.Property<string>("RolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolId", "ActivityId");

                    b.HasIndex("ActivityId");

                    b.ToTable("RolsActivity", "Security");

                    b.HasData(
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "UpdateQuiniela"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "Index"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "UpdateMatches"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "ViewAdminUsers"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "AddAdminUsers"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "GenerateLinkAdminUsers"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "ViewAdminMatch"
                        },
                        new
                        {
                            RolId = "Admin",
                            ActivityId = "UpdateAdminMatchResult"
                        },
                        new
                        {
                            RolId = "Player",
                            ActivityId = "UpdateQuiniela"
                        },
                        new
                        {
                            RolId = "Player",
                            ActivityId = "Index"
                        });
                });

            modelBuilder.Entity("Entities.Match", b =>
                {
                    b.HasOne("Entities.Team", "Local")
                        .WithMany("LocalMatchs")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Quiniela", "Quiniela")
                        .WithMany("Matchs")
                        .HasForeignKey("QuinielaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Team", "Visitor")
                        .WithMany("VisitorMatchs")
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Quiniela");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("Entities.PlayerGameResult", b =>
                {
                    b.HasOne("Entities.Match", "Match")
                        .WithMany("MatchResults")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entities.Player", "Player")
                        .WithMany("MatchResults")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Question", "Question")
                        .WithMany("QuestionResults")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Entities.Question", b =>
                {
                    b.HasOne("Entities.Quiniela", "Quiniela")
                        .WithMany("Questions")
                        .HasForeignKey("QuinielaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quiniela");
                });

            modelBuilder.Entity("Entities.Quiniela", b =>
                {
                    b.HasOne("Entities.Tournament", "Tournament")
                        .WithMany("Quinielas")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("PlayersRols", b =>
                {
                    b.HasOne("Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Auths.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolsActivity", b =>
                {
                    b.HasOne("Entities.Auths.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Auths.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Match", b =>
                {
                    b.Navigation("MatchResults");
                });

            modelBuilder.Entity("Entities.Player", b =>
                {
                    b.Navigation("MatchResults");
                });

            modelBuilder.Entity("Entities.Question", b =>
                {
                    b.Navigation("QuestionResults");
                });

            modelBuilder.Entity("Entities.Quiniela", b =>
                {
                    b.Navigation("Matchs");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Entities.Team", b =>
                {
                    b.Navigation("LocalMatchs");

                    b.Navigation("VisitorMatchs");
                });

            modelBuilder.Entity("Entities.Tournament", b =>
                {
                    b.Navigation("Quinielas");
                });
#pragma warning restore 612, 618
        }
    }
}
